name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: Run Bandit Security Scan
      run: bandit -r backend/

    - name: Run Safety Security Scan
      run: safety check -r backend/requirements.txt

    - name: Run Pytest and Coverage
      run: |
        pytest backend/tests/ --cov=backend --cov-report=xml

    - name: Check Coverage Threshold
      run: |
        coverage report --fail-under=80

    - name: Build Docker Images
      run: |
        docker build -t insight-miner-backend:latest -f backend/Dockerfile backend/
        docker build -t insight-miner-frontend:latest -f frontend/Dockerfile frontend/

  deploy-staging:
    needs: build-and-test
    runs-on: ubuntu-latest
    environment:
      name: Staging
      url: https://staging.example.com # Replace with your staging URL
    steps:
    - name: Deploy to Staging
      run: echo "Deploying to staging... (Placeholder for Render deploy)"
      # Add Render deploy commands here

  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: https://production.example.com # Replace with your production URL
    if: github.ref == 'refs/heads/master' # Only deploy to production from master branch
    # Add manual approval step for production deploy
    # environment:
    #   name: Production
    #   url: https://production.example.com
    #   wait-on: manual-approval
    steps:
    - name: Deploy to Production
      run: echo "Deploying to production... (Placeholder for Render deploy)"
      # Add Render deploy commands here
